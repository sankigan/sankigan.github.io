import{_ as p,c as t,a as s,e,d as l,b as o,r as c,o as i}from"./app-DOK2Wtno.js";const u={},r={href:"https://leetcode.cn/problems/spiral-matrix/description/",target:"_blank",rel:"noopener noreferrer"};function k(d,n){const a=c("ExternalLinkIcon");return i(),t("div",null,[s("blockquote",null,[s("p",null,[s("a",r,[n[0]||(n[0]=l("螺旋矩阵")),o(a)])])]),n[1]||(n[1]=e(`<h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p>给你一个 m 行 n 列的矩阵 matrix ，请按照 <strong>顺时针螺旋顺序</strong> ，返回矩阵中的所有元素。</p><p><strong>示例</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]</span>
<span class="line">输出：[1,2,3,6,9,8,7,4,5]</span>
<span class="line"></span>
<span class="line">输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]</span>
<span class="line">输出：[1,2,3,4,8,12,11,10,9,5,6,7]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解答" tabindex="-1"><a class="header-anchor" href="#解答"><span>解答</span></a></h2><ol><li>定义边界：</li></ol><ul><li>使用4个变量表示当前遍历的边界：上下左右</li><li>初始时，上边界为第一行，下边界为最后一行，左边界为第一列，右边界为最后一列</li></ul><ol start="2"><li>模拟遍历：</li></ol><ul><li>按照顺时针遍历，依次处理上、右、下、左四个边界</li><li>每遍历完一个边界后，调整相应的边界值</li></ul><ol start="3"><li>终止条件：</li></ol><ul><li>当上边界超过下边界，或左边界超过右边界时，遍历结束</li></ul><ol start="4"><li>处理特殊情况：</li></ol><ul><li>当矩阵只有一行或者一列时，直接按顺序输出即可</li></ul><details class="custom-container details"><summary class="custom-container-title">Code</summary><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">matrix</span></span>
<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">spiralOrder</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">matrix</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>matrix<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> matrix<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> top <span class="token operator">=</span> <span class="token number">0</span><span class="token comment">// 上边界</span></span>
<span class="line">  <span class="token keyword">let</span> bottom <span class="token operator">=</span> matrix<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 下边界</span></span>
<span class="line">  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 左边界</span></span>
<span class="line">  <span class="token keyword">let</span> right <span class="token operator">=</span> matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 右边界</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;=</span> bottom <span class="token operator">&amp;&amp;</span> left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 左到右</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> left<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">++</span>top<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 上到下</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> top<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> bottom<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">--</span>right<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 右到左</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">&lt;=</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> right<span class="token punctuation">;</span> k <span class="token operator">&gt;=</span> left<span class="token punctuation">;</span> <span class="token operator">--</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>bottom<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">--</span>bottom<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 下到上</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> l <span class="token operator">=</span> bottom<span class="token punctuation">;</span> l <span class="token operator">&gt;=</span> top<span class="token punctuation">;</span> <span class="token operator">--</span>l<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        ans<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">++</span>left<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> ans<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,14))])}const v=p(u,[["render",k],["__file","54.html.vue"]]),b=JSON.parse('{"path":"/blogs/algorithm/leetcode/54.html","title":"LeetCode 「中等」54.螺旋矩阵","lang":"zh-CN","frontmatter":{"title":"LeetCode 「中等」54.螺旋矩阵","date":"2025-2-26","editLink":false,"tags":["LeetCode"],"categories":["算法"]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"解答","slug":"解答","link":"#解答","children":[]}],"git":{"createdTime":1740561239000,"updatedTime":1742484209000,"contributors":[{"name":"sanki","email":"sanqi_3737@163.com","commits":4}]},"filePathRelative":"blogs/algorithm/leetcode/54.md"}');export{v as comp,b as data};
