import{_ as e,c as p,a as s,e as l,d as t,b as o,r as c,o as i}from"./app-DOK2Wtno.js";const r={},u={href:"https://leetcode.cn/problems/max-area-of-island/description/",target:"_blank",rel:"noopener noreferrer"};function d(k,n){const a=c("ExternalLinkIcon");return i(),p("div",null,[s("blockquote",null,[s("p",null,[s("a",u,[n[0]||(n[0]=t("岛屿的最大面积")),o(a)])])]),n[1]||(n[1]=l(`<h2 id="题目描述" tabindex="-1"><a class="header-anchor" href="#题目描述"><span>题目描述</span></a></h2><p>岛屿是由一些相邻的 <code>1</code> (代表土地) 构成的组合，这里的「相邻」要求两个 <code>1</code> 必须在 <strong>水平或者竖直的四个方向上</strong> 相邻。你可以假设 <code>grid</code> 的四个边缘都被 <code>0</code>（代表水）包围着。</p><p>岛屿的面积是岛上值为 <code>1</code> 的单元格的数目。</p><p>计算并返回 <code>grid</code> 中最大的岛屿面积。如果没有岛屿，则返回面积为 <code>0</code> 。</p><p><strong>示例</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">输入：grid = [</span>
<span class="line">  [0,0,1,0,0,0,0,1,0,0,0,0,0],</span>
<span class="line">  [0,0,0,0,0,0,0,1,1,1,0,0,0],</span>
<span class="line">  [0,1,1,0,1,0,0,0,0,0,0,0,0],</span>
<span class="line">  [0,1,0,0,1,1,0,0,1,0,1,0,0],</span>
<span class="line">  [0,1,0,0,1,1,0,0,1,1,1,0,0],</span>
<span class="line">  [0,0,0,0,0,0,0,0,0,0,1,0,0],</span>
<span class="line">  [0,0,0,0,0,0,0,1,1,1,0,0,0],</span>
<span class="line">  [0,0,0,0,0,0,0,1,1,0,0,0,0]</span>
<span class="line">]</span>
<span class="line">输出：6</span>
<span class="line"></span>
<span class="line">输入：grid = [[0,0,0,0,0,0,0,0]]</span>
<span class="line">输出：0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解答" tabindex="-1"><a class="header-anchor" href="#解答"><span>解答</span></a></h2><h3 id="dfs-深度优先搜索" tabindex="-1"><a class="header-anchor" href="#dfs-深度优先搜索"><span>DFS（深度优先搜索）</span></a></h3><h4 id="关键思路" tabindex="-1"><a class="header-anchor" href="#关键思路"><span>关键思路</span></a></h4><ol><li>遍历网格</li></ol><ul><li>遍历整个网格，找到值为 <code>1</code> 的单元格，这表示一个岛屿的起点</li></ul><ol start="2"><li>DFS 递归</li></ol><ul><li>对于每个起点，使用 DFS 递归地计算该岛屿的面积</li><li>在递归过程中，将访问过的陆地单元格标记为 <code>0</code>，以避免重复计算</li></ul><ol start="3"><li>更新最大面积</li></ol><ul><li>每次计算完一个岛屿的面积后，更新全局的最大面积</li></ul><ol start="4"><li>返回结果</li></ol><ul><li>遍历结束后，返回最大面积</li></ul><h4 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤"><span>具体步骤</span></a></h4><ol><li>初始化变量</li></ol><ul><li><code>maxArea</code>：用于存储最大岛屿的面积</li><li><code>row</code> 和 <code>col</code>：网格的行数和列数</li></ul><ol start="2"><li>定义 DFS 函数</li></ol><ul><li>递归地计算一个岛屿的面积</li><li>检查边界条件和单元格的值，确保只计算陆地单元格</li></ul><ol start="3"><li>遍历网格</li></ol><ul><li>对于每个单元格，如果值为 <code>1</code>，则调用 DFS 函数计算该岛屿的面积，并更新最大面积</li></ul><ol start="4"><li>返回结果</li></ol><ul><li>返回计算得到的最大面积</li></ul><details class="custom-container details"><summary class="custom-container-title">Code</summary><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token doc-comment comment">/**</span>
<span class="line"> * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">grid</span></span>
<span class="line"> * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span></span>
<span class="line"> */</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">maxAreaOfIsland</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> row <span class="token operator">=</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> col <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> maxArea <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">r<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 检查边界条件和单元格值</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> r <span class="token operator">&gt;=</span> row <span class="token operator">||</span> c <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> c <span class="token operator">&gt;=</span> col <span class="token operator">||</span> grid<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 标记当前单元格为已访问</span></span>
<span class="line">    grid<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 递归计算当前岛屿的面积</span></span>
<span class="line">    <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    area <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    area <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    area <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> c <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    area <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> c <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> area<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> col<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 计算当前岛屿的面积</span></span>
<span class="line">        <span class="token keyword">const</span> islandArea <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 更新最大面积</span></span>
<span class="line">        maxArea <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>islandArea<span class="token punctuation">,</span> maxArea<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> maxArea<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,27))])}const v=e(r,[["render",d],["__file","695.html.vue"]]),b=JSON.parse('{"path":"/blogs/algorithm/leetcode/695.html","title":"LeetCode 「中等」695.岛屿的最大面积","lang":"zh-CN","frontmatter":{"title":"LeetCode 「中等」695.岛屿的最大面积","date":"2025-3-5","editLink":false,"tags":["LeetCode"],"categories":["算法"]},"headers":[{"level":2,"title":"题目描述","slug":"题目描述","link":"#题目描述","children":[]},{"level":2,"title":"解答","slug":"解答","link":"#解答","children":[{"level":3,"title":"DFS（深度优先搜索）","slug":"dfs-深度优先搜索","link":"#dfs-深度优先搜索","children":[]}]}],"git":{"createdTime":1741168131000,"updatedTime":1741173822000,"contributors":[{"name":"sanki","email":"sanqi_3737@163.com","commits":2}]},"filePathRelative":"blogs/algorithm/leetcode/695.md"}');export{v as comp,b as data};
